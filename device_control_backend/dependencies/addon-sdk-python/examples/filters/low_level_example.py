from bitahoy_sdk.filter import TrafficFilter, symbolic_packet as packet



p1 = b"\x38\x10\xd5\x1d\xb8\x64\xb4\x2e\x99\xf6\xa0\x01\x08\x00\x45\x00\x00\x3f\x7c\xdb\x00\x00\x80\x11\x00\x00\xc0\xa8\xb2\x1e\xc0\xa8\xb2\x01\xe1\xb7\x00\x35\x00\x2b\xe5\xad\x71\x08\x01\x00\x00\x01\x00\x00\x00\x00\x00\x00\x0d\x73\x74\x61\x63\x6b\x6f\x76\x65\x72\x66\x6c\x6f\x77\x03\x63\x6f\x6d\x00\x00\x01\x00\x01"


f = TrafficFilter()

# dst_port (offset 36,37) == 53 or src_port (offset 34,35) == 53
f.add((packet[36:38] == b"\x00\x35") | (packet[34:36] == b"\x00\x35"))
# AND transport protocol is udp (17)
f.add(packet[23] == 17)
# AND network protocol is IPv4 (0x0800)
f.add(packet[12:14] == 0x0800)
print(f.get_ast())


print(f.evaluate(p1))

